{"version":3,"file":"static/js/729.4b8ebea7.chunk.js","mappings":"2RAEMA,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAc,mCAAG,sGACLL,EAASM,IAAI,qBADR,uBACpBC,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qDAKdC,EAAa,mCAAG,WAAMC,GAAN,yFACJT,EAASM,IAAT,iBAAuBG,IADnB,uBACnBF,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKbG,EAAc,mCAAG,WAAMC,GAAN,yFACLX,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNQ,MAAAA,KAHwB,uBACpBJ,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdK,EAAO,mCAAG,WAAOH,EAAIN,GAAX,yFACEH,EAASM,IAAT,iBAAuBG,EAAvB,YAA6BN,IAD/B,uBACbI,EADa,EACbA,KADa,kBAEdA,GAFc,2CAAH,uD,8JCSpB,EAjCe,WACb,OAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,sGAEfJ,EAAS,MAFM,UAGWZ,EAAAA,EAAAA,MAHX,gBAGPiB,EAHO,EAGPA,QACRP,EAAUO,GAJK,gDAMfL,EAAS,EAAD,IANO,yDAAH,qDAShBI,GACD,GAAE,CAACN,IAEJ,IAAMQ,EAAUT,EAAOU,KAAI,gBAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACzB,yBACE,SAAC,KAAD,CAAMZ,OAAQ,CAAEa,KAAMT,GAAYU,GAAE,kBAAanB,GAAjD,SACGgB,GAASC,KAFLjB,EADgB,IAO3B,OACE,0BACGO,IAAS,2CACTO,IAGN,ECtBD,EAXiB,WACf,OACE,iCACE,4CACA,0BACE,SAAC,EAAD,QAIP,C","sources":[" services/API.js","components/movies/Movies.jsx","pages/Homepage/Homepage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'a473b0cd927768e20ae22a6477d6f386',\n  },\n});\n\nexport const getTrendMovies = async () => {\n  const { data } = await instance.get('/trending/all/day');\n  return data;\n};\n\nexport const getMoviesById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getInfo = async (id, params) => {\n  const { data } = await instance.get(`/movie/${id}/${params}`);\n  return data;\n};\n","import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getTrendMovies } from ' services/API';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    const moviesList = async () => {\n      try {\n        setError(null);\n        const { results } = await getTrendMovies();\n        setMovies(results);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    moviesList();\n  }, [setMovies]);\n\n  const element = movies.map(({ id, title, name }) => (\n    <li key={id}>\n      <Link movies={{ from: location }} to={`/movies/${id}`}>\n        {title || name}\n      </Link>\n    </li>\n  ));\n  return (\n    <ul>\n      {error && <p>No film founded</p>}\n      {element}\n    </ul>\n  );\n};\n\nexport default Movies;\n","import Movies from 'components/movies/Movies';\n\nconst Homepage = () => {\n  return (\n    <>\n      <h1>Trending today</h1>\n      <div>\n        <Movies />\n      </div>\n    </>\n  );\n};\n\nexport default Homepage;\n"],"names":["instance","axios","baseURL","params","api_key","getTrendMovies","get","data","getMoviesById","id","getSearchMovie","query","getInfo","useState","movies","setMovies","error","setError","location","useLocation","useEffect","moviesList","results","element","map","title","name","from","to"],"sourceRoot":""}