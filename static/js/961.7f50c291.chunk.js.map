{"version":3,"file":"static/js/961.7f50c291.chunk.js","mappings":"2RAEMA,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAc,mCAAG,sGACLL,EAASM,IAAI,qBADR,uBACpBC,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qDAKdC,EAAa,mCAAG,WAAMC,GAAN,yFACJT,EAASM,IAAT,iBAAuBG,IADnB,uBACnBF,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKbG,EAAc,mCAAG,WAAMC,GAAN,yFACLX,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNQ,MAAAA,KAHwB,uBACpBJ,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdK,EAAO,mCAAG,WAAOH,EAAIN,GAAX,yFACEH,EAASM,IAAT,iBAAuBG,EAAvB,YAA6BN,IAD/B,uBACbI,EADa,EACbA,KADa,kBAEdA,GAFc,2CAAH,uD,wHC4DpB,UA9EqB,WAAO,IAAD,EACzB,GAA0BM,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEQR,GAAOS,EAAAA,EAAAA,MAAPT,GAEFU,GAAWC,EAAAA,EAAAA,MAGXC,GAAO,WADIC,EAAAA,EAAAA,MACKR,aAAT,eAAgBO,OAAQ,KAErCE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdP,EAAS,MAFK,UAGKT,EAAAA,EAAAA,IAAcC,GAHnB,OAGRF,EAHQ,OAIdQ,EAASR,GAJK,gDAMdU,EAAS,EAAD,IANM,yDAAH,qDASfO,GACD,GAAE,CAACP,EAAUF,EAAUN,IAExB,IAGEgB,EAOEX,EAPFW,YACAC,EAMEZ,EANFY,MACAC,EAKEb,EALFa,KACAC,EAIEd,EAJFc,SACAC,EAGEf,EAHFe,OACAC,EAEEhB,EAFFgB,aACAC,EACEjB,EADFiB,aAGF,OACE,gCACGf,GACD,mBAAQgB,QAfG,kBAAMb,EAASE,EAAf,EAecY,KAAK,SAA9B,6BAGA,4BACE,gBACEC,IAAKT,GAAW,yCAAsCA,GACtDU,IAAI,YAEN,4BACE,0BACGT,GAASC,EADZ,KACoBG,GAAgBA,EAAaM,MAAM,GAAI,GAD3D,QAGA,yCAAiBL,MACjB,sCACA,uBAAIH,KACJ,oCACA,uBACGC,GACCA,EAAOQ,KAAI,YAAe,IAAZV,EAAW,EAAXA,KACZ,MAAM,GAAN,OAAUA,EAAV,IACD,aAIT,4BACE,SAAC,KAAD,CAAMb,MAAO,CAAEO,KAAAA,GAAQiB,GAAE,kBAAa7B,EAAb,SAAzB,mBAGA,SAAC,KAAD,CAAMK,MAAO,CAAEO,KAAAA,GAAQiB,GAAE,kBAAa7B,EAAb,YAAzB,yBAIF,0BACE,SAAC,KAAD,QAIP,C","sources":[" services/API.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'a473b0cd927768e20ae22a6477d6f386',\n  },\n});\n\nexport const getTrendMovies = async () => {\n  const { data } = await instance.get('/trending/all/day');\n  return data;\n};\n\nexport const getMoviesById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getInfo = async (id, params) => {\n  const { data } = await instance.get(`/movie/${id}/${params}`);\n  return data;\n};\n","import { useEffect, useState } from 'react';\nimport {\n  useParams,\n  useNavigate,\n  Outlet,\n  Link,\n  useLocation,\n} from 'react-router-dom';\nimport { getMoviesById } from ' services/API';\n\nconst MovieDetails = () => {\n  const [state, setState] = useState({});\n  const [error, setError] = useState(null);\n\n  const { id } = useParams();\n\n  const navigate = useNavigate();\n\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  useEffect(() => {\n    const fetchById = async () => {\n      try {\n        setError(null);\n        const data = await getMoviesById(id);\n        setState(data);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchById();\n  }, [setError, setState, id]);\n\n  const goBack = () => navigate(from);\n\n  const {\n    poster_path,\n    title,\n    name,\n    overview,\n    genres,\n    release_date,\n    vote_average,\n  } = state;\n\n  return (\n    <>\n      {error}\n      <button onClick={goBack} type=\"button\">\n        ‚Üê Go back\n      </button>\n      <div>\n        <img\n          src={poster_path && `https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt=\"Poster\"\n        />\n        <div>\n          <h1>\n            {title || name} ({release_date && release_date.slice(0, -6)})\n          </h1>\n          <p>User rating: {vote_average}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>\n            {genres &&\n              genres.map(({ name }) => {\n                return `${name} `;\n              })}\n          </p>\n        </div>\n      </div>\n      <div>\n        <Link state={{ from }} to={`/movies/${id}/cast`}>\n          Cast\n        </Link>\n        <Link state={{ from }} to={`/movies/${id}/reviews`}>\n          Reviews\n        </Link>\n      </div>\n      <div>\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["instance","axios","baseURL","params","api_key","getTrendMovies","get","data","getMoviesById","id","getSearchMovie","query","getInfo","useState","state","setState","error","setError","useParams","navigate","useNavigate","from","useLocation","useEffect","fetchById","poster_path","title","name","overview","genres","release_date","vote_average","onClick","type","src","alt","slice","map","to"],"sourceRoot":""}